% a newproc 1
% np

% example greeting 0

example module_info 0

% a call 1
% 10

% a module_info 0

% a test 1
% a

% a test 1
% b

% a test 1
% 0

% lists append 2
% [1, 2, 3]
% [4, 5, 6]

% lists append 1
% [[1, 2], [], [3]]

% lists concat 1
% [a, 1, 1.5, [55, 56, 57]]

% lists duplicate 2
% 3
% d

% lists zip 2
% [a, b]
% [1, 2]

% lists reverse 1
% a

% lists reverse 1
% [a, b, c]

% lists reverse 2
% [1, 2]
% [0]

% a map 1
% mapitem

% a tuple 1
% []

% add add 2
% 1
% 2

% a call 1
% 1

% a funs 1
% [1, 2, 3]

% a all 1
% [a, a]

% a all 1
% [a, b]

% a any 1
% [b, a]

% a sending 0

% a sendrecv 0

% a bignum1 0
% a bignum2 0
% a bignum3 0

% b recv_catch 1
% 1
% b old_catch 1
% 1

% b throw 0

% numop relation 3
% 1
% 2
% 3

% numop bool 1
% true

% b bin3 2
% <<1, 2, 3>>
% <<4, 5, 6>>

% b bin3 2
% <<1>>
% <<2>>

b bin4 2
1
<<2>>

b applies 4
b
bin
98
99

b atomnames 3
'a'
'0244'
'EXIT'

a append 2
[1]
[2]
